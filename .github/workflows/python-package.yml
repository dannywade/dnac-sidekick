name: Test DNAC Sidekick Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DNAC_URL: ${{ secrets.DNAC_URL }}
  DNAC_USER: ${{ secrets.DNAC_USER }}
  DNAC_PASS: ${{ secrets.DNAC_PASS }}

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install and configure Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-in-project: true
    - name: Install dependencies
      run: poetry install
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
    - name: Format check with black
      run: |
        source $VENV
        make format
    - name: Test with pytest (with coverage)
      run: |
        source $VENV
        pytest tests -v --cov=./dnac_sidekick --cov-report=xml:./coverage.xml --cov-report term-missing
    - name: Upload code coverage
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        name: dnac_sidekick
